{"name": "test_api_all[data0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 200", "trace": "data = {'前置条件': '', '是否执行': '', '期望结果': '{\"msg\": \"操作成功\", \"code\": 200}', '状态码': 200.0, ...}\n\n    @allure.epic(\"xcf\")\n    @pytest.mark.parametrize(\"data\", OperationExcel().getExceldatas())\n    def test_api_all(data):\n        #获取表格请求头数据 对请求头做为空处理并添加token\n        headers = data[ExcelVarles.case_headers]\n        if len(str(headers).split())== 0:\n            pass\n        elif len(str(headers).split())>= 0:\n            headers = json.loads(headers)\n            headers[\"Authorization\"]=\"Bearer eyJhbGciOiJIUzUxMiJ9.eyJ0ZW5hbnQiOiJtYXN0ZXIiLCJsb2dpbl91c2VyX2tleSI6IjM4NDYxZTQ2LTkyODQtNDk2Ny1iYjdmLTllZDg4M2NjMTRhZSJ9.Oz8VrnOijzVUaZwIxfKR6ujbMCbdvMx2Gs9AOoMtD0wrdSFkclausubVQxHW0o39Q-SwaUTH5MVvdePamRnb1Q\"\n            headers[\"Cookie\"]=\"Tenant-Key=master; Admin-Token=eyJhbGciOiJIUzUxMiJ9.eyJ0ZW5hbnQiOiJtYXN0ZXIiLCJsb2dpbl91c2VyX2tleSI6IjM4NDYxZTQ2LTkyODQtNDk2Ny1iYjdmLTllZDg4M2NjMTRhZSJ9.Oz8VrnOijzVUaZwIxfKR6ujbMCbdvMx2Gs9AOoMtD0wrdSFkclausubVQxHW0o39Q-SwaUTH5MVvdePamRnb1Q\"\n            headers=headers\n    \n        #获取请求参数并做为空处理\n        params = data[ExcelVarles.case_data]\n    \n        if len(str(params).split())== 0:\n            pass\n        elif len(str(params).split())>= 0:\n            params =params\n            #把请求参数中的null替换为None 并去掉请求参数中的换行符\n            #new_param=params.replace(\"null\", \"None\") #注意字符串替换需要用新字符串替换旧字符串，不能直接用字符串替换\n            #new_params=re.sub(\"\\n\",\"\",new_param)\n            #print(new_params)\n    \n        #断言封装\n        case_code = int(data[ExcelVarles.case_code])\n        def case_assert_result(response):\n            assert response.json()[\"code\"] == case_code# \"状态码\"\n            assert data[ExcelVarles.case_result] in json.dumps(response.json(),ensure_ascii=False)#\"响应数据\" ensure_ascii=False便于打印或作为返回数据时正确显示中文\n        #执行用例\n        if data[ExcelVarles.case_method] == \"get\":\n            response=ApiRequest().send_request(\n                method=data[ExcelVarles.case_method],\n                url=data[ExcelVarles.case_url],\n                headers=headers,\n                params=params)\n            print(response.json())\n            case_assert_result(response=response)\n        elif data[ExcelVarles.case_method] == \"post\":\n            response=ApiRequest().send_request(\n                method=data[ExcelVarles.case_method],\n                url=data[ExcelVarles.case_url],\n                headers=headers,\n                data=params)\n            print(response.json())\n>           case_assert_result(response=response)\n\ntest\\test_api_all.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [200]>\n\n    def case_assert_result(response):\n>       assert response.json()[\"code\"] == case_code# \"状态码\"\nE       assert 500 == 200\n\ntest\\test_api_all.py:36: AssertionError"}, "parameters": [{"name": "data", "value": "{'用例ID': 'case_0001', '用例模块': '船舶动态分类', '用例名称': '新增船舶动态分类', '用例地址': '\\nhttp://192.168.0.137:8082/dev-api/base/shipDynamicClassify', '请求方式': 'post', '请求类型': 'json', '请求参数': '{\\n\"shipDynamicClassifyId\": null,\\n\"classifyName\": \"测试\",\\n\"remark\": \"备注\",\\n\"createTime\": null,\\n\"updateTime\": null,\\n\"createBy\": null,\\n\"updateBy\": null,\\n\"createDept\": null,\\n\"companyId\": null\\n}', '请求头': '{\\n\"Accept\": \"application/json, text/plain, */*\",\\n\"Content-Type\": \"application/json;charset=UTF-8\",\\n\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36\"}\\n', '前置条件': '', '是否执行': '', '状态码': 200.0, '期望结果': '{\"msg\": \"操作成功\", \"code\": 200}'}"}], "start": 1735031384741, "stop": 1735031384920, "uuid": "22c68baa-1aa6-4fe4-829a-0db3c49a1e38", "historyId": "3ba61526828a3751922a1e3b87726eea", "testCaseId": "3f2096eccbc93ab450c3e31d68b0cb23", "fullName": "test.test_api_all#test_api_all", "labels": [{"name": "epic", "value": "xcf"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api_all"}, {"name": "host", "value": "DESKTOP-RP828LC"}, {"name": "thread", "value": "9088-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api_all"}]}